/**
 * Analizador de Sentimientos Empresarial
 * Sistema de IA para an√°lisis autom√°tico de feedback y rese√±as
 */

class SentimentAnalyzer {
  constructor() {
    this.apiKey = null; // Se obtiene din√°micamente
    this.apiUrl = 'https://api.groq.com/openai/v1/chat/completions';
    this.isAnalyzing = false;
    
    this.examples = {
      positive: "Estoy absolutamente enamorado de este producto. La calidad supera mis expectativas m√°s altas. El equipo de soporte me resolvi√≥ una duda en menos de 5 minutos por WhatsApp. Aunque pagu√© un poco m√°s que en otros sitios, realmente vale cada peso. Ya lo recomend√© a 3 amigos y todos est√°n felices. Definitivamente voy a comprar m√°s productos de esta marca.",
      negative: "Qu√© decepci√≥n tan grande. Pagu√© $2,500 por algo que se rompi√≥ al tercer d√≠a. El servicio al cliente es una broma - me tienen dando vueltas hace 2 semanas sin resolver nada. Encima me dijeron que no hay garant√≠a porque 'se ve que lo us√© mal'. Nunca m√°s compro aqu√≠ y ya le dije a mi familia que no lo hagan tampoco. P√©rdida total de dinero y tiempo.",
      neutral: "El producto cumple lo que promete, sin m√°s. Lo ped√≠ el martes y lleg√≥ el viernes, tiempo normal. El precio est√° dentro del rango que esperaba. El empaque ven√≠a bien, sin da√±os. Creo que hay opciones similares en el mercado, pero este est√° bien para lo que necesitaba. No me quejo pero tampoco me emociona."
    };
  }
  
  async analyzeText(text) {
    if (!text || text.trim().length === 0) {
      return {
        error: "Por favor ingresa un texto para analizar"
      };
    }
    
    if (this.isAnalyzing) {
      return {
        error: "Ya hay un an√°lisis en progreso, espera un momento"
      };
    }
    
    this.isAnalyzing = true;
    
    try {
      // Obtener API key usando el mismo sistema que el chat assistant
      if (!this.apiKey) {
        console.log('üîë Obteniendo API key...');
        this.apiKey = await window.getAPIKey();
      }
      
      // Si no hay API key disponible, usar sistema de respaldo
      if (!this.apiKey) {
        console.log('‚ö†Ô∏è No API key disponible, usando an√°lisis local');
        return {
          error: 'Usando an√°lisis local - Conectar IA para an√°lisis completo',
          fallback: this.getFallbackAnalysis(text)
        };
      }
      const prompt = `Eres un consultor empresarial experto. Analiza este feedback de cliente y extrae insights accionables para mejorar el negocio.

TEXTO: "${text}"

Responde en JSON con an√°lisis profundo empresarial:
{
  "perfil_cliente": "descripci√≥n del tipo de cliente (ej: 'Cliente exigente con altas expectativas', 'Usuario casual satisfecho', etc)",
  "nivel_urgencia": "critico|alto|medio|bajo",
  "probabilidad_recompra": "n√∫mero 0-100",
  "probabilidad_recomendacion": "n√∫mero 0-100", 
  "drivers_principales": ["factor 1", "factor 2", "factor 3"],
  "riesgos_detectados": ["riesgo espec√≠fico 1", "riesgo 2"],
  "oportunidades": ["oportunidad concreta 1", "oportunidad 2"],
  "acciones_inmediatas": [
    "Acci√≥n espec√≠fica que debe tomar la empresa YA",
    "Segunda acci√≥n urgente"
  ],
  "impacto_financiero": "descripci√≥n del impacto en ingresos/costos",
  "segmento_mercado": "a qu√© segmento pertenece este cliente",
  "emociones_detectadas": ["emoci√≥n primaria", "emoci√≥n secundaria"],
  "comparativa_competencia": "insights sobre c√≥mo se compara con competidores",
  "potencial_viral": "alto|medio|bajo - probabilidad de que comparta su experiencia",
  "valor_lifetime": "estimaci√≥n del valor del cliente a largo plazo"
}`;

      const response = await fetch(this.apiUrl, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          model: 'llama3-8b-8192',
          messages: [
            {
              role: 'system',
              content: 'Eres un experto analista de sentimientos empresariales. Respondes SOLO con JSON v√°lido, sin texto adicional antes o despu√©s.'
            },
            {
              role: 'user',
              content: prompt
            }
          ],
          temperature: 0.1,
          max_tokens: 1000,
          response_format: { type: "json_object" }
        })
      });
      
      if (!response.ok) {
        throw new Error(`Error ${response.status}: ${response.statusText}`);
      }
      
      const data = await response.json();
      const aiResponse = data.choices[0].message.content;
      
      // Parse the JSON response
      const analysis = JSON.parse(aiResponse);
      
      return {
        ...analysis,
        timestamp: new Date().toISOString(),
        wordCount: text.split(/\s+/).length
      };
      
    } catch (error) {
      console.error('Error en an√°lisis:', error);
      
      // Detectar si es problema de conexi√≥n/API
      const isConnectionError = error.message.includes('fetch') || 
                               error.message.includes('network') || 
                               error.message.includes('CORS') ||
                               error.message.includes('401') ||
                               error.message.includes('429');
      
      return {
        error: isConnectionError ? 
          'Usando an√°lisis local - Conectar IA para an√°lisis completo' : 
          `Error en procesamiento: ${error.message}`,
        fallback: this.getFallbackAnalysis(text)
      };
    } finally {
      this.isAnalyzing = false;
    }
  }
  
  getFallbackAnalysis(text) {
    const textoBajo = text.toLowerCase();
    const longitud = text.length;
    
    // Si el texto es muy corto, dar an√°lisis b√°sico
    if (longitud < 20) {
      return {
        perfil_cliente: 'Feedback insuficiente para an√°lisis detallado',
        nivel_urgencia: 'medio',
        probabilidad_recompra: 40,
        probabilidad_recomendacion: 30,
        drivers_principales: ['informaci√≥n limitada'],
        riesgos_detectados: ['Falta de engagement del cliente'],
        oportunidades: ['Solicitar feedback m√°s detallado'],
        acciones_inmediatas: [
          'Contactar cliente para obtener m√°s informaci√≥n',
          'Enviar encuesta estructurada'
        ],
        impacto_financiero: 'Indeterminado - Requiere m√°s datos',
        segmento_mercado: 'No determinado',
        emociones_detectadas: ['neutral'],
        potencial_viral: 'bajo',
        valor_lifetime: 'Requiere an√°lisis adicional'
      };
    }
    
    // An√°lisis m√°s sofisticado para textos largos
    const indicadores = {
      urgente: ['urgente', 'inmediato', 'ya', 'ahora', 'r√°pido', 'problema grave'],
      satisfaccion: ['feliz', 'contento', 'satisfecho', 'encantado', 'enamorado', 'excelente', 'perfecto'],
      insatisfaccion: ['no sirve', 'malo', 'p√©simo', 'decepci√≥n', 'enojado', 'molesto', 'frustrado', 'terrible'],
      precio: ['caro', 'barato', 'precio', 'costo', 'dinero', 'pesos', '$'],
      recomendacion: ['recomiendo', 'recomend√©', 'familia', 'amigos', 'conocidos'],
      competencia: ['otros sitios', 'competencia', 'alternativa', 'opciones similares']
    };
    
    let urgencia = 'bajo';
    let recompra = 50;
    let recomendacion = 50;
    
    if (indicadores.urgente.some(word => textoBajo.includes(word))) urgencia = 'alto';
    if (indicadores.insatisfaccion.some(word => textoBajo.includes(word))) {
      urgencia = 'alto';
      recompra = 25;
      recomendacion = 20;
    }
    if (indicadores.satisfaccion.some(word => textoBajo.includes(word))) {
      urgencia = 'bajo';
      recompra = 85;
      recomendacion = 90;
    }
    
    return {
      perfil_cliente: longitud > 200 ? 'Cliente detallista y comprometido' : 'Cliente con feedback conciso',
      nivel_urgencia: urgencia,
      probabilidad_recompra: recompra,
      probabilidad_recomendacion: recomendacion,
      drivers_principales: ['experiencia general'],
      riesgos_detectados: urgencia === 'alto' ? ['Insatisfacci√≥n del cliente'] : ['Neutralidad en experiencia'],
      oportunidades: ['Mejora en comunicaci√≥n con clientes'],
      acciones_inmediatas: [
        urgencia === 'alto' ? 'Seguimiento inmediato requerido' : 'Monitorear satisfacci√≥n',
        'Solicitar feedback m√°s espec√≠fico'
      ],
      impacto_financiero: recompra > 70 ? 'Positivo' : 'Neutral a negativo',
      segmento_mercado: 'Cliente est√°ndar',
      emociones_detectadas: urgencia === 'alto' ? ['insatisfacci√≥n'] : ['neutral'],
      potencial_viral: 'bajo',
      valor_lifetime: recompra > 70 ? 'Medio-Alto' : 'Bajo-Medio'
    };
  }
  
  renderResults(analysis) {
    const resultsDiv = document.getElementById('sentiment-results');
    if (!resultsDiv) return;
    
    if (analysis.error && !analysis.fallback) {
      resultsDiv.innerHTML = `
        <div class="text-center py-4 text-red-400">
          <div class="font-semibold mb-2">Error en el an√°lisis</div>
          <div class="text-sm">${analysis.error}</div>
        </div>
      `;
      return;
    }
    
    const data = analysis.fallback || analysis;
    
    // Colores por urgencia en lugar de sentimiento b√°sico
    const urgencyColors = {
      critico: { bg: 'red-900/30', border: 'red-400/30', text: 'red-300', icon: 'üö®' },
      alto: { bg: 'orange-900/30', border: 'orange-400/30', text: 'orange-300', icon: '‚ö†Ô∏è' },
      medio: { bg: 'yellow-900/30', border: 'yellow-400/30', text: 'yellow-300', icon: 'üìä' },
      bajo: { bg: 'emerald-900/30', border: 'emerald-400/30', text: 'emerald-300', icon: '‚úÖ' }
    };
    
    const urgency = urgencyColors[data.nivel_urgencia] || urgencyColors.medio;
    
    resultsDiv.innerHTML = `
      <div class="space-y-3 max-h-96 overflow-y-auto">
        
        <!-- Dashboard Ejecutivo -->
        <div class="grid grid-cols-3 gap-2 text-xs">
          <div class="bg-blue-900/20 border border-blue-400/30 rounded p-2 text-center">
            <div class="text-blue-300 font-bold">${data.probabilidad_recompra || 'N/A'}%</div>
            <div class="text-blue-200">Recompra</div>
          </div>
          <div class="bg-purple-900/20 border border-purple-400/30 rounded p-2 text-center">
            <div class="text-purple-300 font-bold">${data.probabilidad_recomendacion || 'N/A'}%</div>
            <div class="text-purple-200">Recomendaci√≥n</div>
          </div>
          <div class="bg-${urgency.bg} border border-${urgency.border} rounded p-2 text-center">
            <div class="text-${urgency.text} font-bold">${urgency.icon}</div>
            <div class="text-${urgency.text}">${(data.nivel_urgencia || 'medio').toUpperCase()}</div>
          </div>
        </div>

        <!-- Perfil del Cliente -->
        ${data.perfil_cliente ? `
          <div class="bg-slate-800/50 rounded p-3">
            <div class="font-semibold text-cyan-300 mb-1 text-sm">üë§ Perfil del Cliente:</div>
            <div class="text-xs text-cyan-200">${data.perfil_cliente}</div>
          </div>
        ` : ''}

        <!-- Acciones Inmediatas (Lo m√°s importante) -->
        ${data.acciones_inmediatas && data.acciones_inmediatas.length > 0 ? `
          <div class="bg-red-900/20 border border-red-400/30 rounded p-3">
            <div class="font-semibold text-red-300 mb-2 text-sm">üöÄ Acciones Inmediatas:</div>
            <div class="space-y-1">
              ${data.acciones_inmediatas.map(accion => `
                <div class="text-xs text-red-200 bg-red-800/20 rounded px-2 py-1">‚Ä¢ ${accion}</div>
              `).join('')}
            </div>
          </div>
        ` : ''}

        <!-- Oportunidades de Negocio -->
        ${data.oportunidades && data.oportunidades.length > 0 ? `
          <div class="bg-emerald-900/20 border border-emerald-400/30 rounded p-3">
            <div class="font-semibold text-emerald-300 mb-2 text-sm">üí∞ Oportunidades:</div>
            <div class="space-y-1">
              ${data.oportunidades.map(op => `
                <div class="text-xs text-emerald-200">‚Ä¢ ${op}</div>
              `).join('')}
            </div>
          </div>
        ` : ''}

        <!-- Riesgos -->
        ${data.riesgos_detectados && data.riesgos_detectados.length > 0 ? `
          <div class="bg-orange-900/20 border border-orange-400/30 rounded p-3">
            <div class="font-semibold text-orange-300 mb-2 text-sm">‚ö†Ô∏è Riesgos Detectados:</div>
            <div class="space-y-1">
              ${data.riesgos_detectados.map(riesgo => `
                <div class="text-xs text-orange-200">‚Ä¢ ${riesgo}</div>
              `).join('')}
            </div>
          </div>
        ` : ''}

        <!-- An√°lisis Financiero -->
        <div class="grid grid-cols-2 gap-2 text-xs">
          ${data.impacto_financiero ? `
            <div class="bg-green-900/20 border border-green-400/30 rounded p-2">
              <div class="font-semibold text-green-300 mb-1">üíµ Impacto Financiero:</div>
              <div class="text-green-200">${data.impacto_financiero}</div>
            </div>
          ` : ''}
          ${data.valor_lifetime ? `
            <div class="bg-indigo-900/20 border border-indigo-400/30 rounded p-2">
              <div class="font-semibold text-indigo-300 mb-1">üìà Valor Lifetime:</div>
              <div class="text-indigo-200">${data.valor_lifetime}</div>
            </div>
          ` : ''}
        </div>

        <!-- Insights Adicionales -->
        <div class="grid grid-cols-2 gap-2 text-xs">
          ${data.segmento_mercado ? `
            <div class="bg-purple-900/20 border border-purple-400/30 rounded p-2">
              <div class="font-semibold text-purple-300">üéØ Segmento:</div>
              <div class="text-purple-200">${data.segmento_mercado}</div>
            </div>
          ` : ''}
          ${data.potencial_viral ? `
            <div class="bg-pink-900/20 border border-pink-400/30 rounded p-2">
              <div class="font-semibold text-pink-300">üî• Viral:</div>
              <div class="text-pink-200">${data.potencial_viral.toUpperCase()}</div>
            </div>
          ` : ''}
        </div>

        <!-- Drivers Principales -->
        ${data.drivers_principales && data.drivers_principales.length > 0 ? `
          <div class="bg-slate-700/30 rounded p-3">
            <div class="font-semibold text-slate-300 mb-2 text-sm">üîë Drivers Principales:</div>
            <div class="flex flex-wrap gap-1">
              ${data.drivers_principales.map(driver => `
                <span class="px-2 py-1 bg-blue-600/20 border border-blue-400/30 rounded text-xs text-blue-300">${driver}</span>
              `).join('')}
            </div>
          </div>
        ` : ''}

        ${analysis.fallback ? `
          <div class="text-center text-xs text-yellow-400 mt-2">
            ‚ö†Ô∏è An√°lisis con sistema de respaldo - Conectar IA para an√°lisis completo
          </div>
        ` : ''}
      </div>
    `;
  }
  
  async loadExample(type) {
    const textarea = document.getElementById('sentiment-input');
    if (!textarea || !this.examples[type]) return;
    
    textarea.value = this.examples[type];
    await this.analyze();
  }
  
  async analyze() {
    const textarea = document.getElementById('sentiment-input');
    const button = document.getElementById('analyze-btn');
    const results = document.getElementById('sentiment-results');
    
    if (!textarea || !button || !results) return;
    
    const text = textarea.value.trim();
    
    if (!text) {
      results.innerHTML = `
        <div class="text-center py-4 text-yellow-400">
          <div class="text-sm">Por favor ingresa un texto para analizar</div>
        </div>
      `;
      return;
    }
    
    // UI Loading state
    button.disabled = true;
    button.textContent = 'Analizando...';
    
    results.innerHTML = `
      <div class="text-center py-6">
        <div class="animate-spin w-8 h-8 border-2 border-purple-500 border-t-transparent rounded-full mx-auto mb-2"></div>
        <div class="text-sm text-purple-300">Procesando con IA empresarial...</div>
      </div>
    `;
    
    try {
      const analysis = await this.analyzeText(text);
      this.renderResults(analysis);
    } catch (error) {
      console.error('Error:', error);
      results.innerHTML = `
        <div class="text-center py-4 text-red-400">
          <div class="text-sm">Error al procesar el an√°lisis</div>
        </div>
      `;
    } finally {
      button.disabled = false;
      button.textContent = 'Analizar con IA';
    }
  }
  
  clear() {
    const textarea = document.getElementById('sentiment-input');
    const results = document.getElementById('sentiment-results');
    
    if (textarea) textarea.value = '';
    if (results) {
      results.innerHTML = `
        <div class="text-center py-4 text-slate-400 text-sm">
          Esperando texto para analizar...
        </div>
      `;
    }
  }
}

// Instancia global
let sentimentAnalyzer = null;

// Funciones globales para la UI
async function analyzeWithGroq() {
  if (!sentimentAnalyzer) {
    sentimentAnalyzer = new SentimentAnalyzer();
  }
  await sentimentAnalyzer.analyze();
}

function clearSentimentAnalysis() {
  if (!sentimentAnalyzer) {
    sentimentAnalyzer = new SentimentAnalyzer();
  }
  sentimentAnalyzer.clear();
}

async function loadSentimentExample(type) {
  if (!sentimentAnalyzer) {
    sentimentAnalyzer = new SentimentAnalyzer();
  }
  await sentimentAnalyzer.loadExample(type);
}

// Inicializar cuando el DOM est√© listo
document.addEventListener('DOMContentLoaded', () => {
  sentimentAnalyzer = new SentimentAnalyzer();
});